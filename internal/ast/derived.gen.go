// Code generated by goderive DO NOT EDIT.

package ast

import (
	"bytes"
	rpctypes "github.com/xxuejie/animagus/pkg/rpctypes"
)

// deriveEqualCell returns whether this and that are equal.
func deriveEqualCell(this, that *rpctypes.CellOutput) bool {
	return (this == nil && that == nil) ||
		this != nil && that != nil &&
			this.Capacity == that.Capacity &&
			deriveEqualScript(&this.Lock, &that.Lock) &&
			deriveEqualScript(this.Type, that.Type)
}

// deriveEqualCellData returns whether this and that are equal.
func deriveEqualCellData(this, that *rpctypes.Raw) bool {
	if this == nil && that == nil {
		return true
	}
	if this != nil && that != nil {
		if *this == nil || *that == nil {
			return *this == nil && *that == nil
		}
		if len(*this) != len(*that) {
			return false
		}
		for i := 0; i < len(*this); i++ {
			if !((*this)[i] == (*that)[i]) {
				return false
			}
		}
		return true
	}
	return false
}

// deriveEqualScript returns whether this and that are equal.
func deriveEqualScript(this, that *rpctypes.Script) bool {
	return (this == nil && that == nil) ||
		this != nil && that != nil &&
			this.CodeHash == that.CodeHash &&
			this.HashType == that.HashType &&
			bytes.Equal(this.Args, that.Args)
}
