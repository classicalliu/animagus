// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ast.proto

package ast

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CellField int32

const (
	CellField_CAPACITY CellField = 0
	CellField_DATA     CellField = 1
	CellField_LOCK     CellField = 2
	CellField_TYPE     CellField = 3
)

var CellField_name = map[int32]string{
	0: "CAPACITY",
	1: "DATA",
	2: "LOCK",
	3: "TYPE",
}

var CellField_value = map[string]int32{
	"CAPACITY": 0,
	"DATA":     1,
	"LOCK":     2,
	"TYPE":     3,
}

func (x CellField) String() string {
	return proto.EnumName(CellField_name, int32(x))
}

func (CellField) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_37b5b141da493253, []int{0}
}

type ScriptField int32

const (
	ScriptField_CODE_HASH ScriptField = 0
	ScriptField_HASH_TYPE ScriptField = 1
	ScriptField_ARGS      ScriptField = 2
)

var ScriptField_name = map[int32]string{
	0: "CODE_HASH",
	1: "HASH_TYPE",
	2: "ARGS",
}

var ScriptField_value = map[string]int32{
	"CODE_HASH": 0,
	"HASH_TYPE": 1,
	"ARGS":      2,
}

func (x ScriptField) String() string {
	return proto.EnumName(ScriptField_name, int32(x))
}

func (ScriptField) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_37b5b141da493253, []int{1}
}

type Op int32

const (
	Op_HASH          Op = 0
	Op_NOT           Op = 1
	Op_GET           Op = 2
	Op_SLICE_BYTES   Op = 3
	Op_PLUS          Op = 4
	Op_MINUS         Op = 5
	Op_EQUAL         Op = 6
	Op_AND           Op = 7
	Op_OR            Op = 8
	Op_LESS          Op = 9
	Op_LESS_OR_EQUAL Op = 10
	Op_LEN           Op = 11
	Op_INDEX         Op = 12
)

var Op_name = map[int32]string{
	0:  "HASH",
	1:  "NOT",
	2:  "GET",
	3:  "SLICE_BYTES",
	4:  "PLUS",
	5:  "MINUS",
	6:  "EQUAL",
	7:  "AND",
	8:  "OR",
	9:  "LESS",
	10: "LESS_OR_EQUAL",
	11: "LEN",
	12: "INDEX",
}

var Op_value = map[string]int32{
	"HASH":          0,
	"NOT":           1,
	"GET":           2,
	"SLICE_BYTES":   3,
	"PLUS":          4,
	"MINUS":         5,
	"EQUAL":         6,
	"AND":           7,
	"OR":            8,
	"LESS":          9,
	"LESS_OR_EQUAL": 10,
	"LEN":           11,
	"INDEX":         12,
}

func (x Op) String() string {
	return proto.EnumName(Op_name, int32(x))
}

func (Op) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_37b5b141da493253, []int{2}
}

type Primitive_Type int32

const (
	Primitive_UINT64       Primitive_Type = 0
	Primitive_BOOL         Primitive_Type = 1
	Primitive_BYTES        Primitive_Type = 2
	Primitive_LIVE_CELL    Primitive_Type = 3
	Primitive_CELL_FIELD   Primitive_Type = 4
	Primitive_SCRIPT_FIELD Primitive_Type = 5
	Primitive_OP           Primitive_Type = 6
	// In animagus, we distinguish args and params in the following way:
	// * If a Value struct contains an arg, it will be interpretted as a
	// function, when used in constructs such as REDUCE or MAP, args acts
	// as placeholders for the values to test/transform.
	// * Params, on the other hand, denotes user input when calling RPCs,
	// for example, a user might provide an amount to transfer, or an address
	// to transfer to, those will be represented via parameters
	Primitive_ARG   Primitive_Type = 7
	Primitive_PARAM Primitive_Type = 8
)

var Primitive_Type_name = map[int32]string{
	0: "UINT64",
	1: "BOOL",
	2: "BYTES",
	3: "LIVE_CELL",
	4: "CELL_FIELD",
	5: "SCRIPT_FIELD",
	6: "OP",
	7: "ARG",
	8: "PARAM",
}

var Primitive_Type_value = map[string]int32{
	"UINT64":       0,
	"BOOL":         1,
	"BYTES":        2,
	"LIVE_CELL":    3,
	"CELL_FIELD":   4,
	"SCRIPT_FIELD": 5,
	"OP":           6,
	"ARG":          7,
	"PARAM":        8,
}

func (x Primitive_Type) String() string {
	return proto.EnumName(Primitive_Type_name, int32(x))
}

func (Primitive_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_37b5b141da493253, []int{0, 0}
}

type Value_Type int32

const (
	Value_PRIMITIVE Value_Type = 0
	Value_LIST      Value_Type = 1
	Value_APPLY     Value_Type = 2
	Value_REDUCE    Value_Type = 3
)

var Value_Type_name = map[int32]string{
	0: "PRIMITIVE",
	1: "LIST",
	2: "APPLY",
	3: "REDUCE",
}

var Value_Type_value = map[string]int32{
	"PRIMITIVE": 0,
	"LIST":      1,
	"APPLY":     2,
	"REDUCE":    3,
}

func (x Value_Type) String() string {
	return proto.EnumName(Value_Type_name, int32(x))
}

func (Value_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_37b5b141da493253, []int{1, 0}
}

type List_Type int32

const (
	List_EMPTY       List_Type = 0
	List_CONS        List_Type = 1
	List_QUERY_CELLS List_Type = 2
	List_MAP         List_Type = 3
	List_FILTER      List_Type = 4
	List_SLICE       List_Type = 5
	List_CONCAT      List_Type = 6
)

var List_Type_name = map[int32]string{
	0: "EMPTY",
	1: "CONS",
	2: "QUERY_CELLS",
	3: "MAP",
	4: "FILTER",
	5: "SLICE",
	6: "CONCAT",
}

var List_Type_value = map[string]int32{
	"EMPTY":       0,
	"CONS":        1,
	"QUERY_CELLS": 2,
	"MAP":         3,
	"FILTER":      4,
	"SLICE":       5,
	"CONCAT":      6,
}

func (x List_Type) String() string {
	return proto.EnumName(List_Type_name, int32(x))
}

func (List_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_37b5b141da493253, []int{2, 0}
}

type Primitive struct {
	T Primitive_Type `protobuf:"varint,1,opt,name=t,proto3,enum=ast.Primitive_Type" json:"t,omitempty"`
	// Types that are valid to be assigned to Fields:
	//	*Primitive_B
	//	*Primitive_U
	//	*Primitive_Raw
	//	*Primitive_CellField
	//	*Primitive_ScriptField
	//	*Primitive_Op
	Fields               isPrimitive_Fields `protobuf_oneof:"fields"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Primitive) Reset()         { *m = Primitive{} }
func (m *Primitive) String() string { return proto.CompactTextString(m) }
func (*Primitive) ProtoMessage()    {}
func (*Primitive) Descriptor() ([]byte, []int) {
	return fileDescriptor_37b5b141da493253, []int{0}
}

func (m *Primitive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Primitive.Unmarshal(m, b)
}
func (m *Primitive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Primitive.Marshal(b, m, deterministic)
}
func (m *Primitive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Primitive.Merge(m, src)
}
func (m *Primitive) XXX_Size() int {
	return xxx_messageInfo_Primitive.Size(m)
}
func (m *Primitive) XXX_DiscardUnknown() {
	xxx_messageInfo_Primitive.DiscardUnknown(m)
}

var xxx_messageInfo_Primitive proto.InternalMessageInfo

func (m *Primitive) GetT() Primitive_Type {
	if m != nil {
		return m.T
	}
	return Primitive_UINT64
}

type isPrimitive_Fields interface {
	isPrimitive_Fields()
}

type Primitive_B struct {
	B bool `protobuf:"varint,2,opt,name=b,proto3,oneof"`
}

type Primitive_U struct {
	U uint64 `protobuf:"varint,3,opt,name=u,proto3,oneof"`
}

type Primitive_Raw struct {
	Raw []byte `protobuf:"bytes,4,opt,name=raw,proto3,oneof"`
}

type Primitive_CellField struct {
	CellField CellField `protobuf:"varint,5,opt,name=cell_field,json=cellField,proto3,enum=ast.CellField,oneof"`
}

type Primitive_ScriptField struct {
	ScriptField ScriptField `protobuf:"varint,6,opt,name=script_field,json=scriptField,proto3,enum=ast.ScriptField,oneof"`
}

type Primitive_Op struct {
	Op Op `protobuf:"varint,7,opt,name=op,proto3,enum=ast.Op,oneof"`
}

func (*Primitive_B) isPrimitive_Fields() {}

func (*Primitive_U) isPrimitive_Fields() {}

func (*Primitive_Raw) isPrimitive_Fields() {}

func (*Primitive_CellField) isPrimitive_Fields() {}

func (*Primitive_ScriptField) isPrimitive_Fields() {}

func (*Primitive_Op) isPrimitive_Fields() {}

func (m *Primitive) GetFields() isPrimitive_Fields {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *Primitive) GetB() bool {
	if x, ok := m.GetFields().(*Primitive_B); ok {
		return x.B
	}
	return false
}

func (m *Primitive) GetU() uint64 {
	if x, ok := m.GetFields().(*Primitive_U); ok {
		return x.U
	}
	return 0
}

func (m *Primitive) GetRaw() []byte {
	if x, ok := m.GetFields().(*Primitive_Raw); ok {
		return x.Raw
	}
	return nil
}

func (m *Primitive) GetCellField() CellField {
	if x, ok := m.GetFields().(*Primitive_CellField); ok {
		return x.CellField
	}
	return CellField_CAPACITY
}

func (m *Primitive) GetScriptField() ScriptField {
	if x, ok := m.GetFields().(*Primitive_ScriptField); ok {
		return x.ScriptField
	}
	return ScriptField_CODE_HASH
}

func (m *Primitive) GetOp() Op {
	if x, ok := m.GetFields().(*Primitive_Op); ok {
		return x.Op
	}
	return Op_HASH
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Primitive) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Primitive_B)(nil),
		(*Primitive_U)(nil),
		(*Primitive_Raw)(nil),
		(*Primitive_CellField)(nil),
		(*Primitive_ScriptField)(nil),
		(*Primitive_Op)(nil),
	}
}

type Value struct {
	T                    Value_Type `protobuf:"varint,1,opt,name=t,proto3,enum=ast.Value_Type" json:"t,omitempty"`
	P                    *Primitive `protobuf:"bytes,2,opt,name=p,proto3" json:"p,omitempty"`
	L                    *List      `protobuf:"bytes,3,opt,name=l,proto3" json:"l,omitempty"`
	Children             []*Value   `protobuf:"bytes,4,rep,name=children,proto3" json:"children,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Value) Reset()         { *m = Value{} }
func (m *Value) String() string { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()    {}
func (*Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_37b5b141da493253, []int{1}
}

func (m *Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value.Unmarshal(m, b)
}
func (m *Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value.Marshal(b, m, deterministic)
}
func (m *Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value.Merge(m, src)
}
func (m *Value) XXX_Size() int {
	return xxx_messageInfo_Value.Size(m)
}
func (m *Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Value proto.InternalMessageInfo

func (m *Value) GetT() Value_Type {
	if m != nil {
		return m.T
	}
	return Value_PRIMITIVE
}

func (m *Value) GetP() *Primitive {
	if m != nil {
		return m.P
	}
	return nil
}

func (m *Value) GetL() *List {
	if m != nil {
		return m.L
	}
	return nil
}

func (m *Value) GetChildren() []*Value {
	if m != nil {
		return m.Children
	}
	return nil
}

type List struct {
	T                    List_Type `protobuf:"varint,1,opt,name=t,proto3,enum=ast.List_Type" json:"t,omitempty"`
	Values               []*Value  `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	Children             []*List   `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *List) Reset()         { *m = List{} }
func (m *List) String() string { return proto.CompactTextString(m) }
func (*List) ProtoMessage()    {}
func (*List) Descriptor() ([]byte, []int) {
	return fileDescriptor_37b5b141da493253, []int{2}
}

func (m *List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_List.Unmarshal(m, b)
}
func (m *List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_List.Marshal(b, m, deterministic)
}
func (m *List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_List.Merge(m, src)
}
func (m *List) XXX_Size() int {
	return xxx_messageInfo_List.Size(m)
}
func (m *List) XXX_DiscardUnknown() {
	xxx_messageInfo_List.DiscardUnknown(m)
}

var xxx_messageInfo_List proto.InternalMessageInfo

func (m *List) GetT() List_Type {
	if m != nil {
		return m.T
	}
	return List_EMPTY
}

func (m *List) GetValues() []*Value {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *List) GetChildren() []*List {
	if m != nil {
		return m.Children
	}
	return nil
}

func init() {
	proto.RegisterEnum("ast.CellField", CellField_name, CellField_value)
	proto.RegisterEnum("ast.ScriptField", ScriptField_name, ScriptField_value)
	proto.RegisterEnum("ast.Op", Op_name, Op_value)
	proto.RegisterEnum("ast.Primitive_Type", Primitive_Type_name, Primitive_Type_value)
	proto.RegisterEnum("ast.Value_Type", Value_Type_name, Value_Type_value)
	proto.RegisterEnum("ast.List_Type", List_Type_name, List_Type_value)
	proto.RegisterType((*Primitive)(nil), "ast.Primitive")
	proto.RegisterType((*Value)(nil), "ast.Value")
	proto.RegisterType((*List)(nil), "ast.List")
}

func init() { proto.RegisterFile("ast.proto", fileDescriptor_37b5b141da493253) }

var fileDescriptor_37b5b141da493253 = []byte{
	// 655 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x54, 0xdd, 0x6e, 0x9b, 0x4a,
	0x10, 0xf6, 0xb2, 0x18, 0xcc, 0xd8, 0x71, 0xe6, 0xec, 0xb9, 0x38, 0x1c, 0xa9, 0x95, 0x5c, 0x4b,
	0xad, 0xac, 0x5c, 0xa4, 0x52, 0xda, 0xa4, 0xd7, 0x04, 0x6f, 0x62, 0x54, 0x0c, 0x64, 0xc1, 0x51,
	0x7c, 0x85, 0x1c, 0x87, 0xaa, 0x48, 0xb4, 0x46, 0x86, 0xa4, 0xea, 0x73, 0xf4, 0x79, 0xfa, 0x00,
	0x7d, 0x90, 0xbe, 0x47, 0xb5, 0x6b, 0x8c, 0x23, 0xf5, 0x6e, 0x7e, 0xbe, 0x99, 0xfd, 0xe6, 0x9b,
	0xd1, 0x82, 0xb5, 0xaa, 0xea, 0xd3, 0x72, 0xbb, 0xa9, 0x37, 0x8c, 0xae, 0xaa, 0x7a, 0xfc, 0x5b,
	0x03, 0x2b, 0xda, 0xe6, 0x5f, 0xf2, 0x3a, 0x7f, 0xca, 0xd8, 0x2b, 0x20, 0xb5, 0x4d, 0x46, 0x64,
	0x32, 0x3c, 0xfb, 0xf7, 0x54, 0x22, 0xdb, 0xd4, 0x69, 0xf2, 0xbd, 0xcc, 0x04, 0xa9, 0xd9, 0x10,
	0xc8, 0xbd, 0xad, 0x8d, 0xc8, 0xa4, 0x37, 0xeb, 0x08, 0x72, 0x2f, 0xfd, 0x47, 0x9b, 0x8e, 0xc8,
	0x44, 0x97, 0xfe, 0x23, 0x63, 0x40, 0xb7, 0xab, 0x6f, 0xb6, 0x3e, 0x22, 0x93, 0xc1, 0xac, 0x23,
	0xa4, 0xc3, 0xde, 0x02, 0xac, 0xb3, 0xa2, 0x48, 0x3f, 0xe5, 0x59, 0xf1, 0x60, 0x77, 0x55, 0xff,
	0xa1, 0xea, 0xef, 0x66, 0x45, 0x71, 0x25, 0xa3, 0xb3, 0x8e, 0xb0, 0xd6, 0x7b, 0x87, 0x9d, 0xc3,
	0xa0, 0x5a, 0x6f, 0xf3, 0xb2, 0x6e, 0x4a, 0x0c, 0x55, 0x82, 0xaa, 0x24, 0x56, 0x89, 0x7d, 0x51,
	0xbf, 0x3a, 0xb8, 0xec, 0x7f, 0xd0, 0x36, 0xa5, 0x6d, 0x2a, 0xb0, 0xa9, 0xc0, 0x61, 0x39, 0xeb,
	0x08, 0x6d, 0x53, 0x8e, 0x6b, 0xd0, 0xe5, 0x04, 0x0c, 0xc0, 0x58, 0x78, 0x41, 0x72, 0xf1, 0x1e,
	0x3b, 0xac, 0x07, 0xfa, 0x65, 0x18, 0xfa, 0x48, 0x98, 0x05, 0xdd, 0xcb, 0x65, 0xc2, 0x63, 0xd4,
	0xd8, 0x11, 0x58, 0xbe, 0x77, 0xcb, 0x53, 0x97, 0xfb, 0x3e, 0x52, 0x36, 0x04, 0x90, 0x56, 0x7a,
	0xe5, 0x71, 0x7f, 0x8a, 0x3a, 0x43, 0x18, 0xc4, 0xae, 0xf0, 0xa2, 0xa4, 0x89, 0x74, 0x99, 0x01,
	0x5a, 0x18, 0xa1, 0xc1, 0x4c, 0xa0, 0x8e, 0xb8, 0x46, 0x53, 0x36, 0x8b, 0x1c, 0xe1, 0xcc, 0xb1,
	0x77, 0xd9, 0x03, 0x43, 0x0d, 0x50, 0x8d, 0x7f, 0x12, 0xe8, 0xde, 0xae, 0x8a, 0xc7, 0x8c, 0xbd,
	0x3c, 0x68, 0x7c, 0xac, 0x38, 0xaa, 0x70, 0xab, 0xef, 0x0b, 0x20, 0xa5, 0xd2, 0xb7, 0xdf, 0x48,
	0xd4, 0xae, 0x40, 0x90, 0x92, 0xfd, 0x07, 0xa4, 0x50, 0x6a, 0xf7, 0xcf, 0x2c, 0x95, 0xf5, 0xf3,
	0xaa, 0x16, 0xa4, 0x60, 0x6f, 0xa0, 0xb7, 0xfe, 0x9c, 0x17, 0x0f, 0xdb, 0xec, 0xab, 0xad, 0x8f,
	0xe8, 0xa4, 0x7f, 0x06, 0x87, 0xe6, 0xa2, 0xcd, 0x8d, 0x2f, 0x1a, 0x1d, 0x8e, 0xc0, 0x8a, 0x84,
	0x37, 0xf7, 0x12, 0xef, 0x96, 0xef, 0xa4, 0xf0, 0xbd, 0x38, 0xd9, 0x49, 0xe1, 0x44, 0x91, 0xbf,
	0x44, 0x4d, 0x6a, 0x25, 0xf8, 0x74, 0xe1, 0x72, 0xa4, 0xe3, 0x5f, 0x04, 0x74, 0xf9, 0x96, 0xe4,
	0xb7, 0xa7, 0x3f, 0x6c, 0x19, 0xb4, 0xec, 0xc7, 0x60, 0x3c, 0xc9, 0x17, 0x2b, 0x5b, 0xfb, 0x8b,
	0x44, 0x93, 0x61, 0xaf, 0x9f, 0x51, 0xa5, 0x0a, 0xf5, 0x6c, 0x94, 0x03, 0xd3, 0xbb, 0x86, 0xa9,
	0x05, 0x5d, 0x3e, 0x8f, 0x92, 0xe5, 0x8e, 0xa5, 0x1b, 0x06, 0x31, 0x12, 0x76, 0x0c, 0xfd, 0x9b,
	0x05, 0x17, 0x4b, 0xb5, 0x26, 0xb9, 0x36, 0x13, 0xe8, 0xdc, 0x89, 0x90, 0x4a, 0xd2, 0x57, 0x9e,
	0x9f, 0x70, 0x81, 0xba, 0x2c, 0x8d, 0x7d, 0xcf, 0xe5, 0xd8, 0x95, 0x61, 0x37, 0x0c, 0x5c, 0x27,
	0x41, 0xe3, 0xe4, 0x03, 0x58, 0xed, 0xdd, 0xb1, 0x01, 0xf4, 0x5c, 0x27, 0x72, 0x5c, 0x6f, 0xff,
	0xc2, 0xd4, 0x49, 0x1c, 0x24, 0x4a, 0x91, 0xd0, 0xfd, 0x88, 0x9a, 0xb4, 0x92, 0x65, 0xc4, 0x91,
	0x9e, 0x9c, 0x43, 0xff, 0xd9, 0xf5, 0x49, 0x0d, 0xdd, 0x70, 0xca, 0xd3, 0x99, 0x13, 0xcf, 0xb0,
	0x23, 0x5d, 0x69, 0xa5, 0x0a, 0xac, 0x1a, 0x38, 0xe2, 0x3a, 0x46, 0xed, 0xe4, 0x07, 0x01, 0x2d,
	0x2c, 0x65, 0xa0, 0x41, 0x9a, 0x40, 0x83, 0x50, 0x8a, 0x6d, 0x02, 0xbd, 0xe6, 0x09, 0x6a, 0x72,
	0x1e, 0xc5, 0x34, 0xdd, 0x9d, 0x21, 0x95, 0xe0, 0xc8, 0x5f, 0xc4, 0xbb, 0x21, 0xe6, 0x5e, 0xb0,
	0x88, 0xb1, 0xab, 0xa4, 0xb8, 0x59, 0x38, 0x7e, 0x73, 0x6d, 0xc1, 0x14, 0x4d, 0x75, 0x7e, 0x02,
	0x7b, 0x8a, 0x2f, 0x8f, 0x63, 0xb4, 0xd8, 0x3f, 0x70, 0x24, 0xad, 0x34, 0x14, 0xe9, 0x0e, 0x0d,
	0x12, 0xed, 0xf3, 0x00, 0xfb, 0xb2, 0x83, 0x17, 0x4c, 0xf9, 0x1d, 0x0e, 0xee, 0x0d, 0xf5, 0x0b,
	0xbc, 0xfb, 0x13, 0x00, 0x00, 0xff, 0xff, 0xc4, 0xfa, 0xac, 0xd1, 0x12, 0x04, 0x00, 0x00,
}
